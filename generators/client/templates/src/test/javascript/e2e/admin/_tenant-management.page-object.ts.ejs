import { browser, ExpectedConditions, element, by, ElementFinder } from 'protractor';

<%_
let elementGetter = `getText()`;
if (enableTranslation) {
    elementGetter = `getAttribute('jhiTranslate')`;
} _%>

export class <%= tenantNameUpperFirst %>MgmtComponentsPage {
    createButton = element(by.id('jh-create-entity'));
    deleteButtons = element.all(by.css('jhi-<%= tenantNameLowerFirst %>-mgmt div table .btn-danger'));
    title = element(by.id('<%= tenantNameLowerFirst %>-management-page-heading'));

    async clickOnCreateButton(timeout?: number) {
        await this.createButton.click();
    }

    async clickOnLastDeleteButton(timeout?: number) {
        await this.deleteButtons.last().click();
    }

    async countDeleteButtons() {
        return this.deleteButtons.count();
    }

    async getTitle() {
        return this.title.<%- elementGetter %>;
    }
}

export class <%= tenantNameUpperFirst %>MgmtUpdatePage {
    pageTitle = element(by.id('jhi-<%= tenantNameLowerFirst %>-management-heading'));
    saveButton = element(by.id('save-entity'));
    cancelButton = element(by.id('cancel-save'));
    nameInput = element(by.id('field_name'));

    async getPageTitle() {
        return this.pageTitle.getAttribute('jhiTranslate');
    }

    async setNameInput(name) {
        await this.nameInput.sendKeys(name);
    }

    async getNameInput() {
        return await this.nameInput.getAttribute('value');
    }

    async save(timeout?: number) {
        await this.saveButton.click();
    }

    async cancel(timeout?: number) {
        await this.cancelButton.click();
    }

    getSaveButton(): ElementFinder {
        return this.saveButton;
    }
}
